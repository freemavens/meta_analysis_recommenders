min_test_rmse <-
if_else(
iterXGB$evaluation_log[iterXGB$best_iteration]$test_rmse_mean < min_test_rmse,
iterXGB$evaluation_log[iterXGB$best_iteration]$test_rmse_mean,
min_test_rmse)
# update global results and retain all things needed
if(min_test_rmse < best_test_rmse){
best_test_rmse <- min_test_rmse
best_params <- params
}
}
finalXGB <-
xgb.train(
params = best_params,
nrounds = 20000,
data = train,
verbose = 2,
maximize = F,
early_stopping_rounds = 5,
watchlist = list(train = train,
test = test)
)
return(list(
iterXGB = iterXGB,
finalXGB = finalXGB,
best_params = best_params)
)
}
model <- searchXGB(xgb_train, xgb_test)
xgb.save(model$finalXGB, 'C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/xgb_model_R.model')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
xgb.save(model$finalXGB, 'C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/xgb_model_R.model')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
library('fastDummies')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/shiny_data.csv')
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/shiny_data.csv')
View(base_data)
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/shiny_data.csv')
View(base_data)
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/shiny_data.csv', na.strings="NA")
View(base_data)
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/shiny_data.csv', na.strings="")
View(base_data)
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
View(base_data)
model <- xgb.load('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/xgb_model_R.model')
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/shiny_data.csv', na.strings="")
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
View(model)
View(model_list)
View(model)
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
library(reticulate)
py_install('pandas')
py_install('scikit-learn')
pd <- import("pandas")
x <- pd$read_pickle("C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/Modelling/All Data/Models/base_model_nodemo_nocountry")
library('readxl')
input_data <- read_excel("C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/model_data.xlsx")
desired_columns <- c("region_code", "tag_beverage_category", "video_static", "general_colours",
"inAd_gender", "tag_intended_tone", "activity", "video_tag_ad_length",
"environment_elements", "consumption_products")
library('tidyverse')
target_variables <- list()
for (column in desired_columns){
target_variables.append()
print(unique(input_data[column]))
}
# input_data %>%
#   select(tag_beverage_category, region_code, video_static, starts_with('tag')) %>%
#   filter(tag_beverage_category == 'Whisk(e)y' & video_static == 'Static') %>%
#   mutate(tag_beverage_category = tolower(tag_beverage_category)) %>%
#   map_dfc(tolower)
install.packages('xgboost')
library('xgboost')
makeXGBMatrix <- function(data, y){
XGBmatrix <-
data %>%
select(-y) %>%
as.matrix %>%
xgb.DMatrix(., label=data[[y]])
return(XGBmatrix)
}
library('fastDummies')
smp_size <- floor(0.75 * nrow(input_data))
train_ind <- sample(seq_len(nrow(input_data)), size = smp_size)
train_ind <- train_ind[train_ind < nrow(input_data)]
train_data <- input_data[train_ind, ]
test_data <- input_data[-train_ind,]
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
makeXGBMatrix(.,'behaviour_change')
xgb_test <- test_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(test_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
makeXGBMatrix(.,'behaviour_change')
searchXGB <- function(train, test){
# random search best xgb hyperparams, keeps best result
min_test_rmse = Inf
best_test_rmse = Inf
best_params = list()
for(i in 1:50){
# random setting of hyperparams
params = list(
booster = 'gbtree',
eta = runif(1, 0.01, 0.3),
max_depth = sample(6:10, 1),
lambda = runif(1, 0.1, 1),
alpha = runif(1, 0.1, 1),
gamma = runif(1, 0, 5),
# subsample = runif(1, .5, 1),
# colsample_bytree = runif(1, .5, .8),
objective = 'reg:squarederror'
)
# x fold cv training
iterXGB <- xgb.cv(
data = train,
params = params,
nfold = 4,
verbose = 2,
early_stopping_rounds = 30,
maximize = F,
nrounds = 10000,
showsd = T,
print_every_n = 10
)
min_test_rmse <-
if_else(
iterXGB$evaluation_log[iterXGB$best_iteration]$test_rmse_mean < min_test_rmse,
iterXGB$evaluation_log[iterXGB$best_iteration]$test_rmse_mean,
min_test_rmse)
# update global results and retain all things needed
if(min_test_rmse < best_test_rmse){
best_test_rmse <- min_test_rmse
best_params <- params
}
}
finalXGB <-
xgb.train(
params = best_params,
nrounds = 20000,
data = train,
verbose = 2,
maximize = F,
early_stopping_rounds = 5,
watchlist = list(train = train,
test = test)
)
return(list(
iterXGB = iterXGB,
finalXGB = finalXGB,
best_params = best_params)
)
}
model <- searchXGB(xgb_train, xgb_test)
xgb.save(model$finalXGB, 'C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/xgb_model_R.model')
install.packages("xgboost")
runApp('R Code/Pernod_Ricard_Recommender_System')
View(train_data)
View(train_data)
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(.) %>%
makeXGBMatrix(.,'behaviour_change')
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(colnames(.)) %>%
makeXGBMatrix(.,'behaviour_change')
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(names(.)) %>%
makeXGBMatrix(.,'behaviour_change')
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(names()) %>%
makeXGBMatrix(.,'behaviour_change')
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(names(.)) %>%
makeXGBMatrix(.,'behaviour_change')
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(names(.)) %>%
makeXGBMatrix(.,'behaviour_change')
train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(names(.))
train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
print(names(.))
xgb_train <- train_data %>%
select(desired_columns) %>%
dummy_cols(.,
remove_selected_columns = T) %>%
add_column(train_data['behaviour_change']) %>%
select(!c("inAd_gender_Not applicable (Hands)",
"video_static_Video, animatic",
"tag_beverage_category_Vodka cocktail",
"general_colours_Dark, electric",
"consumption_products_Cocktails and bartender",
"tag_beverage_category_Rum cocktail")) %>%
names()
xgb_train
names(base_data)
base_data_test <- dummy_cols(remove_selected_columns = T) %>%
names(.)
base_data_test <- dummy_cols(base_data, remove_selected_columns = T) %>%
names(.)
base_data_test
runApp('R Code/Pernod_Ricard_Recommender_System')
model_results <- readRDS("C:/Users/Tom/OneDrive - msqpartners.com/Documents/GitHub/PR_meta_analysis/results.rds")
sort(model_results)
barplot(sample(sort(model_results), 100000)
barplot(sample(sort(model_results), 100000))
barplot(sample(sort(model_results), 10000))
barplot(sort(sample(model_results, 1000)))
barplot(sort(sample(model_results, 10000)))
hist(sort(sample(model_results, 10000)))
hist(sort(sample(model_results, 10000)), ylim = c(5,10))
hist(sort(sample(model_results, 10000)), xlim = c(5,10))
hist(sort(sample(model_results, 1000)), xlim = c(5,10))
hist(sort(sample(model_results, 100000)), xlim = c(5,10))
hist(model_results, xlim = c(5,10))
hist(sort(sample(model_results, 5000000)), xlim = c(5,10))
hist(sort(sample(model_results, 1000000)), xlim = c(5,10))
hist(sort(sample(model_results, 1000000)), xlim = c(5,10))
hist(sort(sample(model_results, 2000000)), xlim = c(5,10))
hist(sort(sample(model_results, 1000000)), xlim = c(5,10))
h<-hist(sort(sample(model_results, 1000000)), xlim = c(5,10))
h<-hist(sort(sample(model_results, 1000000)), xlim = c(5,10))
h$breaks
cut(7.54, h$breaks)
h<-hist(sort(sample(model_results, 1000000)), xlim = c(5,10))
bin <- cut(7.54, h$breaks)
clr <- rep("white", length(h$counts))
clr[bin] <- "red"
plot(h, col=clr)
shiny::runApp('R Code/Pernod_Ricard_Recommender_System')
runApp()
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
shiny::runApp('R Code/Pernod_Ricard_Recommender_System')
shiny::runApp('R Code/Base_Recommender_System')
runApp('R Code/Base_Recommender_System')
shiny::runApp('R Code/Pernod_Ricard_Recommender_System')
shiny::runApp('R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Pernod_Ricard_Recommender_System')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
library('rsconnect')
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
model <- xgb.load('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System/xgb_model_R.model')
library('xgboost')
library('tidyverse')
library(shiny)
library('fastDummies')
model <- xgb.load('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System/xgb_model_R.model')
base_data <- read.csv('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System/shiny_data.csv', na.strings="")
model_results <- readRDS("C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System/results.rds")
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::showLogs()
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
runApp('R Code/Base_Recommender_System')
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System', streaming=TRUE)
base_data <- read.csv('shiny_data.csv', na.strings="")
library('xgboost')
library('tidyverse')
library(shiny)
library('fastDummies')
model <- xgb.load('xgb_model_R.model')
base_data <- read.csv('shiny_data.csv', na.strings="")
model_results <- readRDS("results.rds")
model_results <- sort(sample(model_results, 1000000))
model <- xgb.load('xgb_model_R.model')
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library('xgboost')
library('tidyverse')
library(shiny)
library('fastDummies')
model <- xgb.load('xgb_model_R.model')
View(train_data)
setwd('C:\Users\Tom\OneDrive - msqpartners.com\Documents\R Code\Pernod_Ricard_Recommender_System')
setwd('C:\Users\Tom\OneDrive - msqpartners.com\Documents\R Code\Pernod_Ricard_Recommender_System')
setwd('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
model <- xgb.load('xgb_model_R.model')
base_data <- read.csv('shiny_data.csv', na.strings="")
model_results <- readRDS("results.rds")
model_results <- sort(sample(model_results, 1000000))
base_data %>% select(all_of(column)) %>% unique
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System', streaming=TRUE)
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
base_data %>% select(all_of(column))
column
base_data %>% select(column)
base_data %>% unique(base_data$column)
unique(base_data$column)
base_data
column
unique(base_data$column)
test <- unique(base_data$column)
unique(base_data$column)
test <- unique(base_data$region_code)
column
column[1]
unique(base_data$column[1])
"region_code"
column
unique(base_data$column)
unique(base_data$"region_code")
unique(base_data$region_code)
region_code
variable <- "region_code"
variable
unique(base_data$variable)
unique(base_data$"region_code")
base_data$region_code
'"' + variable + '"'
paste0('"',variable,'"')
paste('"',variable,'"')
paste('"',variable,"'")
paste('"',variable,"'", sep='')
unique(base_data$..column)
column
..column
library(data.table)
unique(base_data$..column)
unique(base_data[,..column)
unique(base_data[,..column]
unique(base_data[,..column])
unique(base_data[,..column])
unique(base_data[, column, with=FALSE])
unique(base_data[column])
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System', streaming=TRUE)
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System', streaming=TRUE)
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
library('rsconnect')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System', streaming=TRUE)
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
runApp('~/R Code/Base_Recommender_System')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
rsconnect::setAccountInfo(name='fm-datascience', token='5088942F7E3C77B8E885334D720B24A4', secret='lpNns95D3wzpU17r6oMW8QD3oi5DJ+RsWSyLO/I0')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
rsconnect::showLogs('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System', streaming=TRUE)
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Base_Recommender_System')
rsconnect::deployApp('C:/Users/Tom/OneDrive - msqpartners.com/Documents/R Code/Pernod_Ricard_Recommender_System')
